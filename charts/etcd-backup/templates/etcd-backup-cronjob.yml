---

kind: CronJob
apiVersion: batch/v1
metadata:
  name: {{ include "etcd-backup.name" . }}
  namespace: {{ include "etcd-backup.namespace" . }}
spec:
  schedule: "{{ .Values.data_backup_cron }}"
  startingDeadlineSeconds: 600
  concurrencyPolicy: Allow
  suspend: false
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      backoffLimit: 0
      template:
        metadata:
          creationTimestamp: null
        spec:
          nodeSelector:
            node-role.kubernetes.io/master: ''
          restartPolicy: Never
          serviceAccountName: etcd-backup
          hostPID: true
          schedulerName: default-scheduler
          hostNetwork: true
          terminationGracePeriodSeconds: 30
          securityContext: {}
          containers:
            - resources:
                limits:
                  cpu: '1'
                  memory: 512Mi
                requests:
                  cpu: 500m
                  memory: 128Mi
              terminationMessagePath: /dev/termination-log
              name: backup-etcd
              command:
                - /bin/sh
                - /usr/local/bin/backup.sh
              securityContext:
                privileged: true
                runAsUser: 0
              imagePullPolicy: Always
              volumeMounts:
                - name: host
                  mountPath: /host
                - name: volume-backup
                  mountPath: /backup
              terminationMessagePolicy: File
              envFrom:
                - configMapRef:
                    name: backup-config
              image: ghcr.io/adfinis/openshift-etcd-backup
          serviceAccount: etcd-backup
          volumes:
            - name: host
              hostPath:
                path: /
                type: Directory
            - name: volume-backup
              persistentVolumeClaim:
                claimName: etcd-backup-pvc
          dnsPolicy: ClusterFirst
          tolerations:
            - key: node-role.kubernetes.io/master
              effect: NoSchedule
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1